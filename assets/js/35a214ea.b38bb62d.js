"use strict";(self.webpackChunkjalapeno_api_gateway_documentation=self.webpackChunkjalapeno_api_gateway_documentation||[]).push([[753],{3873:function(e,n,t){t.d(n,{Z:function(){return r}});var o=t(7294),i=t(6010),a="tableOfContentsInline_3fWc";function s(e){var n=e.toc,t=e.isChild;return n.length?o.createElement("ul",{className:t?"":"table-of-contents"},n.map((function(e){return o.createElement("li",{key:e.id},o.createElement("a",{href:"#"+e.id,dangerouslySetInnerHTML:{__html:e.value}}),o.createElement(s,{isChild:!0,toc:e.children}))}))):null}var r=function(e){var n=e.toc;return o.createElement("div",{className:(0,i.Z)(a)},o.createElement(s,{toc:n}))}},9027:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return l},contentTitle:function(){return p},metadata:function(){return d},toc:function(){return c},default:function(){return m}});var o=t(7462),i=t(3366),a=(t(7294),t(3905)),s=t(3873),r=["components"],l={sidebar_position:3,title:"Messages"},p=void 0,d={unversionedId:"api/messages",id:"api/messages",isDocsHomePage:!1,title:"Messages",description:"Request Service",source:"@site/docs/api/messages.md",sourceDirName:"api",slug:"/api/messages",permalink:"/jagw-docs/docs/api/messages",editUrl:"https://github.com/jalapeno-api-gateway/docs/api/messages.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,title:"Messages"},sidebar:"tutorialSidebar",previous:{title:"Subscription Service",permalink:"/jagw-docs/docs/api/subscription-service"},next:{title:"PropertyNames",permalink:"/jagw-docs/docs/api/property-names"}},c=[{value:"Request Service",id:"request-service",children:[]},{value:"Subscription Service",id:"subscription-service",children:[]},{value:"Common",id:"common",children:[]},{value:"Base",id:"base",children:[]},{value:"About Messages",id:"about-messages",children:[]},{value:"Request Messages",id:"request-messages",children:[{value:"<code>TopologyRequest</code>",id:"topologyrequest",children:[]},{value:"<code>TelemetryRequest</code>",id:"telemetryrequest",children:[]},{value:"<code>LSNodeResponse</code>",id:"lsnoderesponse",children:[]},{value:"<code>LSLinkResponse</code>",id:"lslinkresponse",children:[]},{value:"<code>LSPrefixResponse</code>",id:"lsprefixresponse",children:[]},{value:"<code>LSSRv6SIDResponse</code>",id:"lssrv6sidresponse",children:[]},{value:"<code>TelemetryResponse</code>",id:"telemetryresponse",children:[]},{value:"<code>TelemetryData</code>",id:"telemetrydata",children:[]}]},{value:"Subscription Messages",id:"subscription-messages",children:[{value:"<code>TopologySubscription</code>",id:"topologysubscription",children:[]},{value:"<code>TelemetrySubscription</code>",id:"telemetrysubscription",children:[]},{value:"<code>LSNodeEvent</code>",id:"lsnodeevent",children:[]},{value:"<code>LSLinkEvent</code>",id:"lslinkevent",children:[]},{value:"<code>LSPrefixEvent</code>",id:"lsprefixevent",children:[]},{value:"<code>LSSRv6SIDEvent</code>",id:"lssrv6sidevent",children:[]},{value:"<code>TelemetryEvent</code>",id:"telemetryevent",children:[]}]},{value:"Common Messages",id:"common-messages",children:[{value:"<code>LSNode</code>",id:"lsnode",children:[]},{value:"<code>LSLink</code>",id:"lslink",children:[]},{value:"<code>LSPrefix</code>",id:"lsprefix",children:[]},{value:"<code>LSSRv6SID</code>",id:"lssrv6sid",children:[]}]},{value:"Base Messages",id:"base-messages",children:[{value:"<code>MultiTopologyIdentifier</code>",id:"multitopologyidentifier",children:[]}]}],u={toc:c};function m(e){var n=e.components,t=(0,i.Z)(e,r);return(0,a.kt)("wrapper",(0,o.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"request-service"},"Request Service"),(0,a.kt)(s.Z,{toc:c[c.length-4].children,mdxType:"TOCInline"}),(0,a.kt)("h2",{id:"subscription-service"},"Subscription Service"),(0,a.kt)(s.Z,{toc:c[c.length-3].children,mdxType:"TOCInline"}),(0,a.kt)("h2",{id:"common"},"Common"),(0,a.kt)(s.Z,{toc:c[c.length-2].children,mdxType:"TOCInline"}),(0,a.kt)("h2",{id:"base"},"Base"),(0,a.kt)(s.Z,{toc:c[c.length-1].children,mdxType:"TOCInline"}),(0,a.kt)("h2",{id:"about-messages"},"About Messages"),(0,a.kt)("p",null,"This sections lists all ",(0,a.kt)("inlineCode",{parentName:"p"},"protobuf")," messages defined by the services of the Jalape\xf1o API Gateway."),(0,a.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"'required', 'optional' & 'repeated'")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},"All properties that are preceded by either the ",(0,a.kt)("strong",{parentName:"p"},"optional")," or ",(0,a.kt)("strong",{parentName:"p"},"required")," keyword do not contain the actual value, but rather pointers to those values. This is due to the implementation of ",(0,a.kt)("a",{parentName:"p",href:"https://developers.google.com/protocol-buffers/docs/proto"},"proto2"),"."),(0,a.kt)("p",{parentName:"div"},"The reason for this design choice is explained in the section ",(0,a.kt)("a",{parentName:"p",href:"../design/design-choices#why-use-proto2-instead-of-proto3"},"Why use proto2 instead of proto3?"),"."))),(0,a.kt)("h2",{id:"request-messages"},"Request Messages"),(0,a.kt)("h3",{id:"topologyrequest"},(0,a.kt)("inlineCode",{parentName:"h3"},"TopologyRequest")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-protobuf"},"message TopologyRequest {\n    repeated string keys = 1;\n    repeated string propertyNames = 2;\n}\n")),(0,a.kt)("h3",{id:"telemetryrequest"},(0,a.kt)("inlineCode",{parentName:"h3"},"TelemetryRequest")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-protobuf"},"message TelemetryRequest {\n    repeated string ipv4addresses = 1;\n    repeated string propertyNames = 2;\n}\n")),(0,a.kt)("h3",{id:"lsnoderesponse"},(0,a.kt)("inlineCode",{parentName:"h3"},"LSNodeResponse")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-protobuf"},"message LSNodeResponse {\n    repeated LSNode lsNodes = 1;\n}\n")),(0,a.kt)("h3",{id:"lslinkresponse"},(0,a.kt)("inlineCode",{parentName:"h3"},"LSLinkResponse")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-protobuf"},"message LSLinkResponse {\n    repeated LSLink lsLinks = 1;\n}\n")),(0,a.kt)("h3",{id:"lsprefixresponse"},(0,a.kt)("inlineCode",{parentName:"h3"},"LSPrefixResponse")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-protobuf"},"message LSPrefixResponse {\n    repeated LSPrefix lsPrefixes = 1;\n}\n")),(0,a.kt)("h3",{id:"lssrv6sidresponse"},(0,a.kt)("inlineCode",{parentName:"h3"},"LSSRv6SIDResponse")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-protobuf"},"message LSSRv6SIDResponse {\n    repeated LSSRv6SID lsSRv6SIDs = 1;\n}\n")),(0,a.kt)("h3",{id:"telemetryresponse"},(0,a.kt)("inlineCode",{parentName:"h3"},"TelemetryResponse")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-protobuf"},"message TelemetryResponse {\n    repeated TelemetryData telemetryData = 1;\n}\n")),(0,a.kt)("h3",{id:"telemetrydata"},(0,a.kt)("inlineCode",{parentName:"h3"},"TelemetryData")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-protobuf"},"message TelemetryData {\n    required string ipv4address = 1;\n    optional int64 dataRate = 2;\n    optional int64 packetsSent = 3;\n    optional int64 packetsReceived = 4;\n    optional string state = 5;\n    optional int64 lastStateTransitionTime = 6;\n}\n")),(0,a.kt)("h2",{id:"subscription-messages"},"Subscription Messages"),(0,a.kt)("h3",{id:"topologysubscription"},(0,a.kt)("inlineCode",{parentName:"h3"},"TopologySubscription")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-protobuf"},"message TopologySubscription {\n    repeated string keys = 1;\n    repeated string propertyNames = 2;\n}\n")),(0,a.kt)("h3",{id:"telemetrysubscription"},(0,a.kt)("inlineCode",{parentName:"h3"},"TelemetrySubscription")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-protobuf"},"message TelemetrySubscription {\n    repeated string ipv4addresses = 1;\n    repeated string propertyNames = 2;\n}\n")),(0,a.kt)("h3",{id:"lsnodeevent"},(0,a.kt)("inlineCode",{parentName:"h3"},"LSNodeEvent")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-protobuf"},"message LSNodeEvent {\n    required string action = 1;\n    required string key = 2;\n    optional LSNode lsNode = 3;\n}\n")),(0,a.kt)("h3",{id:"lslinkevent"},(0,a.kt)("inlineCode",{parentName:"h3"},"LSLinkEvent")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-protobuf"},"message LSLinkEvent {\n    required string action = 1;\n    required string key = 2;\n    optional LSLink lsLink = 3;\n}\n")),(0,a.kt)("h3",{id:"lsprefixevent"},(0,a.kt)("inlineCode",{parentName:"h3"},"LSPrefixEvent")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-protobuf"},"message LSPrefixEvent {\n    required string action = 1;\n    required string key = 2;\n    optional LSPrefix lsPrefix = 3;\n}\n")),(0,a.kt)("h3",{id:"lssrv6sidevent"},(0,a.kt)("inlineCode",{parentName:"h3"},"LSSRv6SIDEvent")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-protobuf"},"message LSSRv6SIDEvent {\n    required string action = 1;\n    required string key = 2;\n    optional LSSRv6SID lsSRv6SID = 3;\n}\n")),(0,a.kt)("h3",{id:"telemetryevent"},(0,a.kt)("inlineCode",{parentName:"h3"},"TelemetryEvent")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-protobuf"},"message TelemetryEvent {\n    required string ipv4address = 1;\n    optional int64 dataRate = 2;\n    optional int64 packetsSent = 3;\n    optional int64 packetsReceived = 4;\n    optional string state = 5;\n    optional int64 lastStateTransitionTime = 6;\n}\n")),(0,a.kt)("h2",{id:"common-messages"},"Common Messages"),(0,a.kt)("p",null,"These messages are used by both the ",(0,a.kt)("strong",{parentName:"p"},"Request Service")," and the ",(0,a.kt)("strong",{parentName:"p"},"Subscription Service"),"."),(0,a.kt)("h3",{id:"lsnode"},(0,a.kt)("inlineCode",{parentName:"h3"},"LSNode")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-protobuf"},"message LSNode {\n    required string Key = 1;\n    optional string ID = 2;\n    optional string RouterHash = 3;\n    optional int64 DomainID = 4;\n    optional string RouterIP = 5;\n    optional string PeerHash = 6;\n    optional string PeerIP = 7;\n    optional int32 PeerASN = 8;\n    optional string Timestamp = 9;\n    optional string IGPRouterID = 10;\n    optional uint32 ASN = 11;\n    repeated MultiTopologyIdentifier MTID = 12;\n    optional string AreaID = 13;\n    optional string Protocol = 14;\n    optional uint32 ProtocolID = 15;\n    optional string Name = 16;\n    optional bool IsPrepolicy = 17;\n    optional bool IsAdjRIBIn = 18;\n}\n")),(0,a.kt)("h3",{id:"lslink"},(0,a.kt)("inlineCode",{parentName:"h3"},"LSLink")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-protobuf"},"message LSLink {\n    required string Key = 1;\n    optional string ID = 2;\n    optional string RouterHash = 3;\n    optional string RouterIP = 4;\n    optional int64 DomainID = 5;\n    optional string PeerHash = 6;\n    optional string PeerIP = 7;\n    optional int32 PeerASN = 8;\n    optional string Timestamp = 9;\n    optional string IGPRouterID = 10;\n    optional string Protocol = 11;\n    optional string AreaID = 12;\n    optional string Nexthop = 13;\n    optional MultiTopologyIdentifier MTID = 14;\n    optional string LocalLinkIP = 15;\n    optional string RemoteLinkIP = 16;\n    optional uint32 IGPMetric = 17;\n    optional string RemoteNodeHash = 18;\n    optional string LocalNodeHash = 19;\n    optional string RemoteIGPRouterID = 20;\n}\n")),(0,a.kt)("h3",{id:"lsprefix"},(0,a.kt)("inlineCode",{parentName:"h3"},"LSPrefix")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-protobuf"},"message LSPrefix {\n    required string Key = 1;\n    optional string ID = 2;\n    optional string RouterHash = 3;\n    optional string RouterIP = 4;\n    optional int64 DomainID = 5;\n    optional string PeerHash = 6;\n    optional string PeerIP = 7;\n    optional int32 PeerASN = 8;\n    optional string Timestamp = 9;\n    optional string IGPRouterID = 10;\n    optional string Protocol = 11;\n    optional string AreaID = 12;\n    optional string Nexthop = 13;\n    optional string LocalNodeHash = 14;\n    optional MultiTopologyIdentifier MTID = 15;\n    optional string Prefix = 16;\n    optional int32 PrefixLen = 17;\n    optional uint32 PrefixMetric = 18;\n    optional bool IsPrepolicy = 19;\n    optional bool IsAdjRIBIn = 20;\n}\n")),(0,a.kt)("h3",{id:"lssrv6sid"},(0,a.kt)("inlineCode",{parentName:"h3"},"LSSRv6SID")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-protobuf"},"message LSSRv6SID {\n    required string Key = 1;\n    optional string ID = 2;\n    optional string RouterHash = 3;\n    optional string RouterIP = 4;\n    optional int64 DomainID = 5;\n    optional string PeerHash = 6;\n    optional string PeerIP = 7;\n    optional int32 PeerASN = 8;\n    optional string Timestamp = 9;\n    optional string IGPRouterID = 10;\n    optional uint32 LocalNodeASN = 11;\n    optional string Protocol = 12;\n    optional string Nexthop = 13;\n    optional string LocalNodeHash = 14;\n    optional MultiTopologyIdentifier MTID = 15;\n    optional uint32 IGPFlags = 16;\n    optional bool IsPrepolicy = 17;\n    optional bool IsAdjRIBIn = 18;\n    optional string SRv6SID = 19;\n}\n")),(0,a.kt)("h2",{id:"base-messages"},"Base Messages"),(0,a.kt)("h3",{id:"multitopologyidentifier"},(0,a.kt)("inlineCode",{parentName:"h3"},"MultiTopologyIdentifier")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-protobuf"},"message MultiTopologyIdentifier {\n    required bool OFlag = 1;\n    required bool AFlag = 2;\n    required uint32 MTID = 3;\n}\n")))}m.isMDXComponent=!0}}]);