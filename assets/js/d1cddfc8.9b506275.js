"use strict";(self.webpackChunkjalapeno_api_gateway_documentation=self.webpackChunkjalapeno_api_gateway_documentation||[]).push([[587],{3873:function(e,t,a){a.d(t,{Z:function(){return o}});var n=a(7294),r=a(6010),l="tableOfContentsInline_3fWc";function i(e){var t=e.toc,a=e.isChild;return t.length?n.createElement("ul",{className:a?"":"table-of-contents"},t.map((function(e){return n.createElement("li",{key:e.id},n.createElement("a",{href:"#"+e.id,dangerouslySetInnerHTML:{__html:e.value}}),n.createElement(i,{isChild:!0,toc:e.children}))}))):null}var o=function(e){var t=e.toc;return n.createElement("div",{className:(0,r.Z)(l)},n.createElement(i,{toc:t}))}},2581:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return s},contentTitle:function(){return p},metadata:function(){return m},toc:function(){return d},default:function(){return u}});var n=a(7462),r=a(3366),l=(a(7294),a(3905)),i=a(3873),o=["components"],s={sidebar_position:2,title:"Push Service"},p=void 0,m={unversionedId:"api/push-service",id:"api/push-service",isDocsHomePage:!1,title:"Push Service",description:"gRPC Methods",source:"@site/docs/api/push-service.md",sourceDirName:"api",slug:"/api/push-service",permalink:"/jagw-docs/docs/api/push-service",editUrl:"https://gitlab.ost.ch/ins/jalapeno-api/docs/api/push-service.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"Push Service"},sidebar:"tutorialSidebar",previous:{title:"Request Service",permalink:"/jagw-docs/docs/api/request-service"}},d=[{value:"gRPC Methods",id:"grpc-methods",children:[]},{value:"gRPC Messages",id:"grpc-messages",children:[]},{value:"Properties",id:"properties",children:[]},{value:"Protobuf Definition",id:"protobuf-definition",children:[]},{value:"Methods",id:"methods",children:[{value:"<code>SubscribeToLsNodes(TopologySubscription)</code>",id:"subscribetolsnodestopologysubscription",children:[]},{value:"<code>SubscribeToLsLinks(TopologySubscription)</code>",id:"subscribetolslinkstopologysubscription",children:[]},{value:"<code>SubscribeToTelemetryData(TelemetrySubscription)</code>",id:"subscribetotelemetrydatatelemetrysubscription",children:[]}]},{value:"Messages",id:"messages",children:[{value:"<code>TelemetrySubscription</code>",id:"telemetrysubscription",children:[]},{value:"<code>TelemetryEvent</code>",id:"telemetryevent",children:[]},{value:"<code>TopologySubscription</code>",id:"topologysubscription",children:[]},{value:"<code>LsNodeEvent</code>",id:"lsnodeevent",children:[]},{value:"<code>LsNode</code>",id:"lsnode",children:[]},{value:"<code>LsLinkEvent</code>",id:"lslinkevent",children:[]},{value:"<code>LsLink</code>",id:"lslink",children:[]}]},{value:"PropertyNames",id:"propertynames",children:[{value:"<code>LsNode</code> PropertyNames",id:"lsnode-propertynames",children:[]},{value:"<code>LsLink</code> PropertyNames",id:"lslink-propertynames",children:[]},{value:"<code>TelemetryEvent</code> PropertyNames for Physical Interfaces",id:"telemetryevent-propertynames-for-physical-interfaces",children:[]},{value:"<code>TelemetryEvent</code> PropertyNames for Loopback Interfaces",id:"telemetryevent-propertynames-for-loopback-interfaces",children:[]}]}],k={toc:d};function u(e){var t=e.components,a=(0,r.Z)(e,o);return(0,l.kt)("wrapper",(0,n.Z)({},k,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"grpc-methods"},"gRPC Methods"),(0,l.kt)(i.Z,{toc:d[d.length-3].children,mdxType:"TOCInline"}),(0,l.kt)("h2",{id:"grpc-messages"},"gRPC Messages"),(0,l.kt)(i.Z,{toc:d[d.length-2].children,mdxType:"TOCInline"}),(0,l.kt)("h2",{id:"properties"},"Properties"),(0,l.kt)(i.Z,{toc:d[d.length-1].children,mdxType:"TOCInline"}),(0,l.kt)("h2",{id:"protobuf-definition"},"Protobuf Definition"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-protobuf"},"service PushService {\n    rpc SubscribeToLsNodes(TopologySubscription) returns (stream LsNodeEvent) {}\n    rpc SubscribeToLsLinks(TopologySubscription) returns (stream LsLinkEvent) {}\n    rpc SubscribeToTelemetryData(TelemetrySubscription) returns (stream TelemetryEvent) {}\n}\n")),(0,l.kt)("h2",{id:"methods"},"Methods"),(0,l.kt)("h3",{id:"subscribetolsnodestopologysubscription"},(0,l.kt)("inlineCode",{parentName:"h3"},"SubscribeToLsNodes(TopologySubscription)")),(0,l.kt)("h4",{id:"definition"},"Definition"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-protobuf"},"rpc SubscribeToLsNodes(TopologySubscription) returns (stream LsNodeEvent) {}\n")),(0,l.kt)("h4",{id:"parameters"},"Parameters"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"#topologysubscription"},"TopologySubscription")),(0,l.kt)("h4",{id:"returns"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"#lsnodeevent"},"LsNodeEvent")),(0,l.kt)("h4",{id:"description"},"Description"),(0,l.kt)("p",null,"Takes a ",(0,l.kt)("a",{parentName:"p",href:"#topologysubscription"},"TopologySubscription")," with the specified ",(0,l.kt)("strong",{parentName:"p"},"keys")," and ",(0,l.kt)("strong",{parentName:"p"},"propertyNames")," and returns a stream of ",(0,l.kt)("a",{parentName:"p",href:"#lsnodeevent"},"LsNodeEvents"),". An LsNodeEvent contains an update to a single ",(0,l.kt)("a",{parentName:"p",href:"#lsnode"},"LsNode"),". Only ",(0,l.kt)("a",{parentName:"p",href:"#lsnode"},"LsNodes")," matching one of the specified ",(0,l.kt)("strong",{parentName:"p"},"keys")," are returned and only properties specified in ",(0,l.kt)("strong",{parentName:"p"},"propertyNames")," are set."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Omitting ",(0,l.kt)("strong",{parentName:"li"},"keys")," streams ",(0,l.kt)("a",{parentName:"li",href:"#lsnodeevent"},"LsNodeEvents")," for all available ",(0,l.kt)("a",{parentName:"li",href:"#lsnode"},"LsNodes"),"."),(0,l.kt)("li",{parentName:"ul"},"Omitting ",(0,l.kt)("strong",{parentName:"li"},"propertyNames")," streams ",(0,l.kt)("a",{parentName:"li",href:"#lsnodeevent"},"LsNodeEvents")," for ",(0,l.kt)("a",{parentName:"li",href:"#lsnode"},"LsNodes")," with all available properties.")),(0,l.kt)("h4",{id:"examples"},"Examples"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"keys"),(0,l.kt)("th",{parentName:"tr",align:null},"propertyNames"),(0,l.kt)("th",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"th",href:"#lsnodeevent"},"LsNodeEvents")))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[",(0,l.kt)("br",null),'"nodeKey1",',(0,l.kt)("br",null),'"nodeKey2"',(0,l.kt)("br",null),"]"),(0,l.kt)("td",{parentName:"tr",align:null},"[",(0,l.kt)("br",null),'"Name",',(0,l.kt)("br",null),'"Asn",',(0,l.kt)("br",null),'"RouterIp"',(0,l.kt)("br",null),"]"),(0,l.kt)("td",{parentName:"tr",align:null},"Streams ",(0,l.kt)("a",{parentName:"td",href:"#lsnodeevent"},"LsNodeEvents")," for ",(0,l.kt)("a",{parentName:"td",href:"#lsnode"},"LsNodes")," for the two specified keys with the three requested properties.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"-"),(0,l.kt)("td",{parentName:"tr",align:null},"[",(0,l.kt)("br",null),'"Name",',(0,l.kt)("br",null),'"Asn",',(0,l.kt)("br",null),'"RouterIp"',(0,l.kt)("br",null),"]"),(0,l.kt)("td",{parentName:"tr",align:null},"Streams ",(0,l.kt)("a",{parentName:"td",href:"#lsnodeevent"},"LsNodeEvents")," for all available ",(0,l.kt)("a",{parentName:"td",href:"#lsnode"},"LsNodes")," with the three requested properties.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[",(0,l.kt)("br",null),'"nodeKey1",',(0,l.kt)("br",null),'"nodeKey2"',(0,l.kt)("br",null),"]"),(0,l.kt)("td",{parentName:"tr",align:null},"-"),(0,l.kt)("td",{parentName:"tr",align:null},"Streams ",(0,l.kt)("a",{parentName:"td",href:"#lsnodeevent"},"LsNodeEvents")," for ",(0,l.kt)("a",{parentName:"td",href:"#lsnode"},"LsNodes")," for the two specified keys with all available properties.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"-"),(0,l.kt)("td",{parentName:"tr",align:null},"-"),(0,l.kt)("td",{parentName:"tr",align:null},"Streams ",(0,l.kt)("a",{parentName:"td",href:"#lsnodeevent"},"LsNodeEvents")," for all available ",(0,l.kt)("a",{parentName:"td",href:"#lsnode"},"LsNodes")," with all available properties.")))),(0,l.kt)("h3",{id:"subscribetolslinkstopologysubscription"},(0,l.kt)("inlineCode",{parentName:"h3"},"SubscribeToLsLinks(TopologySubscription)")),(0,l.kt)("h4",{id:"definition-1"},"Definition"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-protobuf"},"rpc SubscribeToLsLinks(TopologySubscription) returns (stream LsLinkEvent) {}\n")),(0,l.kt)("h4",{id:"parameters-1"},"Parameters"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"#topologysubscription"},"TopologySubscription")),(0,l.kt)("h4",{id:"returns-1"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"#lslinkevent"},"LsLinkEvent")),(0,l.kt)("h4",{id:"description-1"},"Description"),(0,l.kt)("p",null,"Takes a ",(0,l.kt)("a",{parentName:"p",href:"#topologysubscription"},"TopologySubscription")," with the specified ",(0,l.kt)("strong",{parentName:"p"},"keys")," and ",(0,l.kt)("strong",{parentName:"p"},"propertyNames")," and returns a stream of ",(0,l.kt)("a",{parentName:"p",href:"#lslinkevent"},"LsLinkEvents"),". An LsLinkEvent contains an update to a single ",(0,l.kt)("a",{parentName:"p",href:"#lslink"},"LsLink"),". Only ",(0,l.kt)("a",{parentName:"p",href:"#lslink"},"LsLinks")," matching one of the specified ",(0,l.kt)("strong",{parentName:"p"},"keys")," are returned and only properties specified in ",(0,l.kt)("strong",{parentName:"p"},"propertyNames")," are set."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Omitting ",(0,l.kt)("strong",{parentName:"li"},"keys")," streams ",(0,l.kt)("a",{parentName:"li",href:"#lslinkevent"},"LsLinkEvents")," for all available ",(0,l.kt)("a",{parentName:"li",href:"#lslink"},"LsLink"),"."),(0,l.kt)("li",{parentName:"ul"},"Omitting ",(0,l.kt)("strong",{parentName:"li"},"propertyNames")," streams ",(0,l.kt)("a",{parentName:"li",href:"#lslinkevent"},"LsLinkEvents")," for ",(0,l.kt)("a",{parentName:"li",href:"#lslink"},"LsLink")," with all available properties.")),(0,l.kt)("h4",{id:"examples-1"},"Examples"),(0,l.kt)("p",null,"See examples for method ",(0,l.kt)("a",{parentName:"p",href:"#examples"},"SubscribeToLsNodes(TopologySubscription)"),", as it follows the same principle."),(0,l.kt)("h3",{id:"subscribetotelemetrydatatelemetrysubscription"},(0,l.kt)("inlineCode",{parentName:"h3"},"SubscribeToTelemetryData(TelemetrySubscription)")),(0,l.kt)("h4",{id:"definition-2"},"Definition"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-protobuf"},"rpc SubscribeToTelemetryData(TelemetrySubscription) returns (stream TelemetryEvent) {}\n")),(0,l.kt)("h4",{id:"parameters-2"},"Parameters"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"#telemetrysubscription"},"TelemetrySubscription")),(0,l.kt)("h4",{id:"returns-2"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"#telemetryresponse"},"TelemetryResponse")),(0,l.kt)("h4",{id:"description-2"},"Description"),(0,l.kt)("p",null,"Takes a ",(0,l.kt)("a",{parentName:"p",href:"#telemetrysubscription"},"TelemetrySubscription")," with the specified ",(0,l.kt)("strong",{parentName:"p"},"ipv4addresses")," and ",(0,l.kt)("strong",{parentName:"p"},"propertyNames")," and returns a stream of ",(0,l.kt)("a",{parentName:"p",href:"#telemetryevent"},"TelemetryEvents"),". A TelemetryEvent contains an update to a single event tied to an ipv4address."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Omitting ",(0,l.kt)("strong",{parentName:"li"},"ipv4addresses")," streams ",(0,l.kt)("a",{parentName:"li",href:"#telemetryevent"},"TelemetryEvents")," for all available ipv4addresses."),(0,l.kt)("li",{parentName:"ul"},"Omitting ",(0,l.kt)("strong",{parentName:"li"},"propertyNames")," streams ",(0,l.kt)("a",{parentName:"li",href:"#telemetryevent"},"TelemetryEvents")," with all available properties.")),(0,l.kt)("h4",{id:"examples-2"},"Examples"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"ipv4addresses"),(0,l.kt)("th",{parentName:"tr",align:null},"propertyNames"),(0,l.kt)("th",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"th",href:"#telemetryevent"},"TelemetryEvent")))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[",(0,l.kt)("br",null),'"1.2.3.4",',(0,l.kt)("br",null),'"2.3.4.5"',(0,l.kt)("br",null),"]"),(0,l.kt)("td",{parentName:"tr",align:null},"[",(0,l.kt)("br",null),'"DataRate",',(0,l.kt)("br",null),'"PacketsSent",',(0,l.kt)("br",null),'"PacketsReceived"',(0,l.kt)("br",null),"]"),(0,l.kt)("td",{parentName:"tr",align:null},"Streams ",(0,l.kt)("a",{parentName:"td",href:"#telemetryevent"},"TelemetryEvents")," for the two specified ipv4addresses with the three requested properties.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"-"),(0,l.kt)("td",{parentName:"tr",align:null},"[",(0,l.kt)("br",null),'"DataRate",',(0,l.kt)("br",null),'"PacketsSent",',(0,l.kt)("br",null),'"PacketsReceived"',(0,l.kt)("br",null),"]"),(0,l.kt)("td",{parentName:"tr",align:null},"Streams ",(0,l.kt)("a",{parentName:"td",href:"#telemetryevent"},"TelemetryEvents")," for all available ipv4addresses with the three specified properties.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[",(0,l.kt)("br",null),'"1.2.3.4",',(0,l.kt)("br",null),'"2.3.4.5"',(0,l.kt)("br",null),"]"),(0,l.kt)("td",{parentName:"tr",align:null},"-"),(0,l.kt)("td",{parentName:"tr",align:null},"Streams ",(0,l.kt)("a",{parentName:"td",href:"#telemetryevent"},"TelemetryEvents")," for the two specified ipv4addresses with all available properties.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"-"),(0,l.kt)("td",{parentName:"tr",align:null},"-"),(0,l.kt)("td",{parentName:"tr",align:null},"Streams ",(0,l.kt)("a",{parentName:"td",href:"#telemetryevent"},"TelemetryEvents")," for all available ipv4addresses with all available properties.")))),(0,l.kt)("h2",{id:"messages"},"Messages"),(0,l.kt)("h3",{id:"telemetrysubscription"},(0,l.kt)("inlineCode",{parentName:"h3"},"TelemetrySubscription")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-protobuf"},"message TelemetrySubscription {\n    repeated string ipv4addresses = 1;\n    repeated string propertyNames = 2;\n}\n")),(0,l.kt)("p",null,"Find all available ",(0,l.kt)("strong",{parentName:"p"},"propertyNames")," in section ",(0,l.kt)("a",{parentName:"p",href:"#propertynames"},"PropertyNames"),"."),(0,l.kt)("h3",{id:"telemetryevent"},(0,l.kt)("inlineCode",{parentName:"h3"},"TelemetryEvent")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-protobuf"},"message TelemetryEvent {\n    string ipv4address = 1;\n    optional int64 dataRate = 2;\n    optional int64 packetsSent = 3;\n    optional int64 packetsReceived = 4;\n    optional string state = 5;\n    optional int64 lastStateTransitionTime = 6;\n}\n")),(0,l.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"keyword 'optional'")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"All properties that are preceded by the ",(0,l.kt)("strong",{parentName:"p"},"optional")," keyword do not contain the actual value, but rather pointers to those values. This is due to the implementation of ",(0,l.kt)("a",{parentName:"p",href:"https://developers.google.com/protocol-buffers/docs/proto3"},"proto3"),".\nThe reason of why some properties were made ",(0,l.kt)("strong",{parentName:"p"},"optional")," is explained ",(0,l.kt)("a",{parentName:"p",href:"#somewhere"},"here")," TODO."))),(0,l.kt)("h3",{id:"topologysubscription"},(0,l.kt)("inlineCode",{parentName:"h3"},"TopologySubscription")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-protobuf"},"message TopologySubscription {\n    repeated string keys = 1;\n    repeated string propertyNames = 2;\n}\n")),(0,l.kt)("p",null,"Find all available ",(0,l.kt)("strong",{parentName:"p"},"propertyNames")," in section ",(0,l.kt)("a",{parentName:"p",href:"#propertynames"},"PropertyNames"),"."),(0,l.kt)("h3",{id:"lsnodeevent"},(0,l.kt)("inlineCode",{parentName:"h3"},"LsNodeEvent")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-protobuf"},"message LsNodeEvent {\n    string action = 1;\n    string key = 2;\n    LsNode lsNode = 3;\n}\n")),(0,l.kt)("p",null,"For further details, see:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#lsnode"},"LsNode"))),(0,l.kt)("h3",{id:"lsnode"},(0,l.kt)("inlineCode",{parentName:"h3"},"LsNode")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-protobuf"},"message LsNode {\n    string key = 1;\n    optional string name = 2;\n    optional int32 asn = 3;\n    optional string router_ip = 4;\n}\n")),(0,l.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"keyword 'optional'")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"All properties that are preceded by the ",(0,l.kt)("strong",{parentName:"p"},"optional")," keyword do not contain the actual value, but rather pointers to those values. This is due to the implementation of ",(0,l.kt)("a",{parentName:"p",href:"https://developers.google.com/protocol-buffers/docs/proto3"},"proto3"),".\nThe reason of why some properties were made ",(0,l.kt)("strong",{parentName:"p"},"optional")," is explained ",(0,l.kt)("a",{parentName:"p",href:"#somewhere"},"here")," TODO."))),(0,l.kt)("h3",{id:"lslinkevent"},(0,l.kt)("inlineCode",{parentName:"h3"},"LsLinkEvent")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-protobuf"},"message LsLinkEvent {\n    string action = 1;\n    string key = 2;\n    LsLink lsLink = 3;\n}\n\n")),(0,l.kt)("p",null,"For further details, see:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#lslink"},"LsLink"))),(0,l.kt)("h3",{id:"lslink"},(0,l.kt)("inlineCode",{parentName:"h3"},"LsLink")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-protobuf"},"message LsLink {\n    string key = 1;\n    optional string router_ip = 2;\n    optional string peer_ip = 3;\n    optional string localLink_ip = 4;\n    optional string remoteLink_ip = 5;\n    optional int32 igp_metric = 6;\n}\n")),(0,l.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"keyword 'optional'")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"All properties that are preceded by the ",(0,l.kt)("strong",{parentName:"p"},"optional")," keyword do not contain the actual value, but rather pointers to those values. This is due to the implementation of ",(0,l.kt)("a",{parentName:"p",href:"https://developers.google.com/protocol-buffers/docs/proto3"},"proto3"),".\nThe reason of why some properties were made ",(0,l.kt)("strong",{parentName:"p"},"optional")," is explained ",(0,l.kt)("a",{parentName:"p",href:"#somewhere"},"here")," TODO."))),(0,l.kt)("h2",{id:"propertynames"},"PropertyNames"),(0,l.kt)("p",null,"When creating a ",(0,l.kt)("a",{parentName:"p",href:"#topologysubscription"},"TopologySubscription")," or a ",(0,l.kt)("a",{parentName:"p",href:"#telemetrysubscription"},"TelemetrySubscription")," you can specify ",(0,l.kt)("strong",{parentName:"p"},"propertyNames")," to define the properties you want to be returned for the requested objects. This is optional, since omitting ",(0,l.kt)("strong",{parentName:"p"},"propertyNames")," results in all available properties being returned.\nWhich ",(0,l.kt)("strong",{parentName:"p"},"propertyNames")," are available depends on the type of object (i.e. ",(0,l.kt)("a",{parentName:"p",href:"#lsnode"},"LsNode"),", ",(0,l.kt)("a",{parentName:"p",href:"#lslink"},"LsLink"),", ",(0,l.kt)("a",{parentName:"p",href:"#telemetryevent"},"TelemetryEvent"),")."),(0,l.kt)("h3",{id:"lsnode-propertynames"},(0,l.kt)("inlineCode",{parentName:"h3"},"LsNode")," PropertyNames"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"propertyName"),(0,l.kt)("th",{parentName:"tr",align:null},"Corresponding field in ",(0,l.kt)("a",{parentName:"th",href:"#lsnode"},"LsNode")))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},'"Asn"'),(0,l.kt)("td",{parentName:"tr",align:null},"LsNode.Asn")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},'"Name"'),(0,l.kt)("td",{parentName:"tr",align:null},"LsNode.Name")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},'"RouterIp"'),(0,l.kt)("td",{parentName:"tr",align:null},"LsNode.Router_ip")))),(0,l.kt)("h3",{id:"lslink-propertynames"},(0,l.kt)("inlineCode",{parentName:"h3"},"LsLink")," PropertyNames"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"propertyName"),(0,l.kt)("th",{parentName:"tr",align:null},"Corresponding field in ",(0,l.kt)("a",{parentName:"th",href:"#lslink"},"LsLink")))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},'"IgpMetric"'),(0,l.kt)("td",{parentName:"tr",align:null},"LsLink.Igp_metric")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},'"LocalLinkIp"'),(0,l.kt)("td",{parentName:"tr",align:null},"LsLink.LocalLink_ip")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},'"PeerIp"'),(0,l.kt)("td",{parentName:"tr",align:null},"LsLink.Peer_ip")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},'"RemoteLinkIp"'),(0,l.kt)("td",{parentName:"tr",align:null},"LsLink.RemoteLink_ip")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},'"RouterIp"'),(0,l.kt)("td",{parentName:"tr",align:null},"LsLink.Router_ip")))),(0,l.kt)("h3",{id:"telemetryevent-propertynames-for-physical-interfaces"},(0,l.kt)("inlineCode",{parentName:"h3"},"TelemetryEvent")," PropertyNames for Physical Interfaces"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"propertyName"),(0,l.kt)("th",{parentName:"tr",align:null},"Corresponding field in ",(0,l.kt)("a",{parentName:"th",href:"#telemetryevent"},"TelemetryEvent")))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},'"DataRate"'),(0,l.kt)("td",{parentName:"tr",align:null},"TelemetryEvent.DataRate")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},'"PacketsReceived"'),(0,l.kt)("td",{parentName:"tr",align:null},"TelemetryEvent.PacketsReceived")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},'"PacketsSent"'),(0,l.kt)("td",{parentName:"tr",align:null},"TelemetryEvent.PacketsSent")))),(0,l.kt)("h3",{id:"telemetryevent-propertynames-for-loopback-interfaces"},(0,l.kt)("inlineCode",{parentName:"h3"},"TelemetryEvent")," PropertyNames for Loopback Interfaces"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"propertyName"),(0,l.kt)("th",{parentName:"tr",align:null},"Corresponding field in ",(0,l.kt)("a",{parentName:"th",href:"#telemetryevent"},"TelemetryEvent")))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},'"State"'),(0,l.kt)("td",{parentName:"tr",align:null},"TelemetryEvent.State")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},'"LastStateTransitionTime"'),(0,l.kt)("td",{parentName:"tr",align:null},"TelemetryEvent.LastStateTransitionTime")))))}u.isMDXComponent=!0}}]);